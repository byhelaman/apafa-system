---
import "@fontsource-variable/archivo";
import "@/styles/globals.css";

import { Toaster } from "@/components/ui/toaster";
import { ViewTransitions } from "astro:transitions";

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<script>
	const getThemePreference = () => {
		if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>

<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<script is:inline src="/theme.js"></script>
	</head>
	<body class="bg-gradient-to-r from-blue-100 to-red-100">
		<main>
			<slot />
		</main>
		<Toaster client:load />
	</body>
</html>

<style is:global>
	html {
		font-family: "Archivo Variable", sans-serif;
		scrollbar-width: none;
		scroll-behavior: smooth;
	}
	.fz {
		field-sizing: content;
	}
</style>
